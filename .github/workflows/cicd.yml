name: Web API Deploy pipeline
on: 
  push:
    paths:
      - '.github/workflows/**'
      - 'cicd-section/api/**'
env:
  AWS_REGION: ap-northeast-1
  ECS_CLUSTER: dev
  ECS_SERVICE: ecs-test-service
  ECR_REPOSITORY: ecs-test-api
  ECS_TASK_DEFINITION_API: cicd-section/.aws/task-def-api.json
permissions:
  id-token: write
  contents: read
jobs:
# test and build
  test-and-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: cicd-section/api
    steps:
      # checkout code
      - name: checkout
        uses: actions/checkout@v4
      - name: run tests and build an image
        run: docker build -t temp_api_image:latest .
      # configure
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
      - name: login to aws ecr
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: push the image to aws ecr
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker image tag temp_api_image:latest $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }}
          docker image push $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }}
          echo $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }} > api-image-uri.txt
      - name: upload the image uri file as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: api-image-uri
          path: cicd-section/api/api-image-uri.txt

# deploy
  deploy:
    runs-on: ubuntu-latest
    needs: [test-and-build]

    steps:
      - name: checkout
        uses: actions/checkout@v4
      # configure
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
      - name: download the artifact
        uses: actions/download-artifact@v2
        with:
          name: api-image-uri
          path: artifacts
      - name: define the image uri
        run: |
          echo "API_IMAGE_URI=$(cat artifacts/api-image-uri.txt)" >> $GITHUB_ENV
      - name: fill in the new image uri in the aws ecs task definition
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION_API }}
          container-name: api
          image: ${{ env.API_IMAGE_URI }}
      - name: deploy ecs task
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wail-forservice-stability: true